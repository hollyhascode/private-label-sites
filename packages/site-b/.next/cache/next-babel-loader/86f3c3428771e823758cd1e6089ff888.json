{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\holly\\\\Documents\\\\hello-render\\\\node_modules\\\\@erig\\\\common\\\\components\\\\ColorPicker.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Icon from \"../extensions/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 32,\n    height: 32,\n    borderRadius: \"50%\"\n  },\n  check: {\n    fontSize: 22,\n    lineHeight: \"32px\"\n  }\n}));\n\nconst Color = ({\n  color,\n  checked\n}) => {\n  const classes = useStyles();\n  const isWhite = color.toLowerCase() === \"#ffffff\" || color.toLowerCase() === \"fff\" || color === \"white\";\n  const border = isWhite ? \"1px solid #a5a5a5\" : \"none\";\n  return __jsx(ButtonBase, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.root,\n    style: {\n      backgroundColor: color,\n      border\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, checked && __jsx(Icon, {\n    className: classes.check,\n    inverted: !isWhite,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"check\")));\n};\n\nColor.propTypes = {\n  color: PropTypes.string.isRequired,\n  checked: PropTypes.bool\n};\nColor.defaultProps = {\n  checked: false\n};\n\nconst ColorPicker = ({\n  colors\n}) => __jsx(Grid, {\n  container: true,\n  spacing: 2,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, colors.map(color => __jsx(Grid, {\n  key: color.color,\n  item: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, __jsx(Color, _extends({}, color, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n})))));\n\nColorPicker.Color = Color;\nColorPicker.propTypes = {\n  colors: PropTypes.arrayOf(PropTypes.shape({\n    color: PropTypes.string,\n    checked: PropTypes.bool\n  }))\n};\nColorPicker.defaultProps = {\n  colors: []\n};\nColorPicker.data = [{\n  color: \"#ffffff\",\n  checked: true\n}, {\n  color: \"#000000\",\n  checked: true\n}, {\n  color: \"#dd0500\"\n}, {\n  color: \"#dd7d00\"\n}, {\n  color: \"#dbdd00\"\n}, {\n  color: \"#00dd07\"\n}, {\n  color: \"#00dd9b\"\n}, {\n  color: \"#00ddc7\",\n  checked: true\n}, {\n  color: \"#0065dd\"\n}, {\n  color: \"#4200dd\"\n}, {\n  color: \"#a600dd\"\n}, {\n  color: \"#dd00b8\"\n}];\nexport default ColorPicker;","map":{"version":3,"sources":["C:/Users/holly/Documents/hello-render/node_modules/@erig/common/components/ColorPicker.jsx"],"names":["React","PropTypes","makeStyles","ButtonBase","Icon","Grid","useStyles","root","width","height","borderRadius","check","fontSize","lineHeight","Color","color","checked","classes","isWhite","toLowerCase","border","backgroundColor","propTypes","string","isRequired","bool","defaultProps","ColorPicker","colors","map","arrayOf","shape","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Icon from \"../extensions/Icon\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: 32,\n    height: 32,\n    borderRadius: \"50%\",\n  },\n  check: {\n    fontSize: 22,\n    lineHeight: \"32px\",\n  },\n}));\n\nconst Color = ({ color, checked }) => {\n  const classes = useStyles();\n  const isWhite = color.toLowerCase() === \"#ffffff\" || color.toLowerCase() === \"fff\" || color === \"white\";\n  const border = isWhite ? \"1px solid #a5a5a5\" : \"none\";\n  return (\n    <ButtonBase className={classes.root}>\n      <div className={classes.root} style={{ backgroundColor: color, border }}>\n        {checked && (\n          <Icon className={classes.check} inverted={!isWhite}>\n            check\n          </Icon>\n        )}\n      </div>\n    </ButtonBase>\n  );\n};\n\nColor.propTypes = {\n  color: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n};\nColor.defaultProps = {\n  checked: false,\n};\n\nconst ColorPicker = ({ colors }) => (\n  <Grid container spacing={2}>\n    {colors.map(color => (\n      <Grid key={color.color} item>\n        <Color {...color} />\n      </Grid>\n    ))}\n  </Grid>\n);\n\nColorPicker.Color = Color;\nColorPicker.propTypes = {\n  colors: PropTypes.arrayOf(\n    PropTypes.shape({\n      color: PropTypes.string,\n      checked: PropTypes.bool,\n    }),\n  ),\n};\nColorPicker.defaultProps = {\n  colors: [],\n};\nColorPicker.data = [\n  {\n    color: \"#ffffff\",\n    checked: true,\n  },\n  {\n    color: \"#000000\",\n    checked: true,\n  },\n  {\n    color: \"#dd0500\",\n  },\n  {\n    color: \"#dd7d00\",\n  },\n  {\n    color: \"#dbdd00\",\n  },\n  {\n    color: \"#00dd07\",\n  },\n  {\n    color: \"#00dd9b\",\n  },\n  {\n    color: \"#00ddc7\",\n    checked: true,\n  },\n  {\n    color: \"#0065dd\",\n  },\n  {\n    color: \"#4200dd\",\n  },\n  {\n    color: \"#a600dd\",\n  },\n  {\n    color: \"#dd00b8\",\n  },\n];\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}